@startuml
title Package Diagram - Project Architecture (excluding deliverables)

!define FRONTEND_COLOR #E8F4FD
!define BACKEND_COLOR  #F0F8E8
!define MODEL_COLOR    #FFF2E8

skinparam componentStyle rectangle

' Frontend (actual folders/files under `frontend/src`)
package "Frontend (React) - frontend/src" as FE FRONTEND_COLOR {
  package "entry" {
    component "main.tsx" as FE_entry_main
    component "App.tsx" as FE_entry_app
  }

  package "pages" {
    component "HomeView.tsx" as FE_pages_home
    component "MainView.tsx" as FE_pages_main
  }

  package "components" {
    component "ui/*" as FE_components_ui
    component "layouts/*" as FE_components_layouts
  }

  package "hooks" {
    component "useDeliveryApp" as FE_hooks_useDeliveryApp
    component "use-mobile" as FE_hooks_useMobile
  }

  package "lib" {
    component "api.ts" as FE_lib_api
    component "utils.ts" as FE_lib_utils
  }

  package "types" {
    component "api.ts" as FE_types_api
  }
}

' Backend (actual folders/files under `backend`)
package "Backend (FastAPI) - backend" as BE BACKEND_COLOR {

  component "main.py" as BE_main

  package "app" as BE_app {
    package "api/api_v1" as BE_api_v1 {
      component "api.py" as BE_api_v1_api
      package "endpoints" as BE_endpoints {
        component "map.py" as BE_ep_map
        component "requests.py" as BE_ep_requests
        component "couriers.py" as BE_ep_couriers
        component "tours.py" as BE_ep_tours
        component "deliveries.py" as BE_ep_deliveries
        component "state.py" as BE_ep_state
        component "saved_tours.py" as BE_ep_saved_tours
      }
    }

    package "core" as BE_core {
      component "config.py" as BE_core_config
      component "env.py" as BE_core_env
      component "state.py" as BE_core_state
    }

    package "models" as BE_models MODEL_COLOR {
      component "schemas.py" as BE_models_schemas
    }

    package "services" as BE_services {
      component "TSPService.py" as BE_services_TSP
      component "XMLParser.py" as BE_services_XML
      component "MapService.py" as BE_services_Map
    }

    package "utils" as BE_utils {
      component "TSP/*" as BE_utils_TSP
      component "Astar/TSP_networkx" as BE_utils_networkx
    }
  }

  package "tests" as BE_tests {
    component "test_api.py" as BE_tests_api
    component "test_tsp_*" as BE_tests_tsp
  }

  component "requirements.txt" as BE_requirements
}

' Runtime communications and responsibilities
FE_lib_api ..> BE_api_v1_api : HTTP/REST (API client)

' Key dependencies and flows
FE_pages_main --> FE_lib_api
FE_hooks_useDeliveryApp --> FE_lib_api

BE_ep_map --> BE_core_state
BE_ep_requests --> BE_core_state
BE_ep_tours --> BE_core_state
BE_ep_deliveries --> BE_core_state
BE_ep_saved_tours --> BE_core_state

BE_services_TSP --> BE_models_schemas
BE_services_XML --> BE_models_schemas
BE_services_Map --> BE_models_schemas

note right of FE_lib_api
  API client that calls backend endpoints
  (map, requests, couriers, tours, deliveries,
  saved_tours, state). Main integration point
  between frontend and backend.
end note

note left of BE_core_state
  In-memory application state (map, deliveries,
  couriers, tours) plus persistence helpers
  (persist/load snapshots, save/load state).
end note

@enduml
