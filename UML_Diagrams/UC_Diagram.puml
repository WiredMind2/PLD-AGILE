@startuml name UCdiagram
title Pickup & Delivery Bike Tours - Use Case Diagram

skinparam linetype ortho
skinparam usecase {
    BackgroundColor<<core>> #EEF7FF
    BorderColor #2B6CB0
}

left to right direction

actor Dispatcher
actor Courier

rectangle "Tour Planning System" as System {

    usecase UC_Load         as "Load and display City Map (XML)" <<core>>
    usecase UC_Receive      as "Load Delivery Request (XML)" <<core>>
    usecase UC_Compute      as "Compute Best Tour" <<core>>

    usecase UC_SetCouriers  as "Set Number of Couriers"

    usecase UC_SelectCourier as "Select Courier"
    usecase UC_Pickup_Delivery as "Select Pickup and Delivery Location"
    usecase UC_ServiceTimes as "Set Service Times"

    usecase UC_DisplayTour  as "Display Tour on Map"

    usecase UC_Save         as "Save Current Tours to File"
    usecase UC_Restore      as "Restore Tours from File"

    usecase UC_addDeliveryManual as "Add a delivery request manually" <<core>>
}

' Actor → Use cases
Dispatcher -[#blue]-> UC_Load
Dispatcher -[#blue]-> UC_SetCouriers
Dispatcher -[#blue]-> UC_addDeliveryManual
Dispatcher -[#blue]-> UC_Receive
Dispatcher -[#blue]-> UC_Save
Dispatcher -[#blue]-> UC_Restore
Dispatcher -[#blue]-> UC_Compute

Courier -[#green]-> UC_DisplayTour

' Includes (decomposition) — arrow head points to the included UC
UC_addDeliveryManual .> UC_ServiceTimes : <<include>>
UC_addDeliveryManual .> UC_SelectCourier : <<include>>
UC_addDeliveryManual .> UC_Pickup_Delivery : <<include>>
UC_Receive .> UC_SelectCourier : <<include>>

' Notes / business rules
note right of UC_Compute
- Objective: minimize arrival time back at warehouse
- All tours start at 08:00 from the warehouse
- Constant travel speed: 15 km/h
- Respect pickup-before-delivery constraints
end note

note left of UC_Receive
A delivery request is send by the customer.
end note


@enduml
