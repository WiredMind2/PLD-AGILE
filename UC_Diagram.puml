@startuml name UCdiagram
' Force straight (orthogonal) links
skinparam linetype ortho
title Pickup & Delivery Bike Tours - Use Case Diagram

skinparam usecase {
  BackgroundColor<<core>> #EEF7FF
  BorderColor #2B6CB0
}

left to right direction

actor Dispatcher
actor Biker

rectangle "Tour Planning System" as System {

  usecase UC_Load         as "Load City Map (XML)" <<core>>
  usecase UC_DisplayMap   as "Display Map" <<core>>
  usecase UC_SetCouriers  as "Set Number of Couriers"

  usecase UC_Receive        as "Receive Delivery Request" <<core>>
  usecase UC_SelectCourier as "Select Courier"
  usecase UC_Pickup_Delivery       as "Select Pickup and Delivery Location"
  usecase UC_ServiceTimes as "Set Service Times"

  usecase UC_Compute      as "Compute Best Tour" <<core>>
  usecase UC_DisplayTour  as "Display Tour on Map"

  usecase UC_AskOther     as "Ask to Select Another Courier"
  usecase UC_Reject       as "Reject Delivery Request"

  usecase UC_Save         as "Save Current Tours to File"
  usecase UC_Restore      as "Restore Tours from File"

  usecase UC_Execute      as "Execute Assigned Tour"

  usecase UC_AddBikers as "Add a biker"
}

' Actor â†’ Use cases
Dispatcher --> UC_Load
Dispatcher --> UC_DisplayMap
Dispatcher --> UC_SetCouriers
Dispatcher --> UC_AddBikers

Dispatcher --> UC_Receive
Dispatcher --> UC_Save
Dispatcher --> UC_Restore

Biker --> UC_Execute


' Includes (decomposition)
UC_Receive .> UC_SelectCourier : <<include>>
UC_Receive .> UC_Pickup_Delivery : <<include>>
UC_Receive .> UC_ServiceTimes : <<include>>

' Main computation and downstream effects
UC_Receive --> UC_Compute
UC_Compute .> UC_Execute : <<extend>>
UC_Compute --> UC_DisplayTour

' Dispatcher interacts when infeasible
UC_Compute .> UC_AskOther : <<extend>>\n[No feasible tour]
Dispatcher --> UC_AskOther

' If still none available, reject
UC_AskOther .> UC_Reject : <<extend>>\n[No alternative courier]
Dispatcher --> UC_Reject

' Map display is also available after load/restore
UC_Load --> UC_DisplayMap
UC_Restore --> UC_DisplayMap
UC_Restore --> UC_DisplayTour

UC_DisplayMap .> UC_DisplayTour : <<extend>>

' Notes / business rules
note right of UC_Compute
- Objective: minimize arrival time back at warehouse
- All tours start at 08:00 from the warehouse
- Constant travel speed: 15 km/h
- Respect pickup-before-delivery constraints
end note

note right of UC_Execute
Biker follows the assigned tour and
returns to the warehouse at the end.
end note

note left of UC_Receive
A delivery request is send by the customer.
end note

note right of UC_DisplayMap
Displays for each pickup and each delivery, the address, the arrival time and the
departure time
end note 

@enduml
